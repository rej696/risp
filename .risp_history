#V2
(hello
(hello\\
(hello                                                                                                                   )
(defn hello [a b] (+ a b))
(def hello (fn [a b] (+ a b))
(def hello (fn [a b] (+ a b)))
(def hello (fn (a b) (+ a b)))
(hello 1 2)
(exit)
(define (hello a b) (+ a b))
(hello 1 2)
(exit)
(define (hello a b) (+ a b))
(hello 1 2)
((define (sum a b) (+ a b)) 1 2)
(exit)
(define (hello str) str)
(hello ben)
(hello :ben)
(hello 'ben)
(lambda (a b) (+ a b))
(define (is_equal a b) (= a b))
(is_equal 1 1)
(define (my_test a b) (cond ((is_equal a b) true) (else false)))
(my_test 1 2)
(my_test 1 1)
(exit)
